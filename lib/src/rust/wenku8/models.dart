// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Bookcase {
  final String id;
  final String title;

  const Bookcase({required this.id, required this.title});

  @override
  int get hashCode => id.hashCode ^ title.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Bookcase &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title;
}

class BookcaseItem {
  final String aid;
  final String bid;
  final String title;
  final String author;
  final String cid;
  final String chapterName;

  const BookcaseItem({
    required this.aid,
    required this.bid,
    required this.title,
    required this.author,
    required this.cid,
    required this.chapterName,
  });

  @override
  int get hashCode =>
      aid.hashCode ^
      bid.hashCode ^
      title.hashCode ^
      author.hashCode ^
      cid.hashCode ^
      chapterName.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BookcaseItem &&
          runtimeType == other.runtimeType &&
          aid == other.aid &&
          bid == other.bid &&
          title == other.title &&
          author == other.author &&
          cid == other.cid &&
          chapterName == other.chapterName;
}

class BookshelfItem {
  final Novel novel;
  final String lastRead;

  const BookshelfItem({required this.novel, required this.lastRead});

  @override
  int get hashCode => novel.hashCode ^ lastRead.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BookshelfItem &&
          runtimeType == other.runtimeType &&
          novel == other.novel &&
          lastRead == other.lastRead;
}

class Chapter {
  final String title;
  final String url;
  final String cid;
  final String aid;

  const Chapter({
    required this.title,
    required this.url,
    required this.cid,
    required this.aid,
  });

  @override
  int get hashCode =>
      title.hashCode ^ url.hashCode ^ cid.hashCode ^ aid.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Chapter &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          url == other.url &&
          cid == other.cid &&
          aid == other.aid;
}

class HomeBlock {
  final String title;
  final List<NovelCover> list;

  const HomeBlock({required this.title, required this.list});

  @override
  int get hashCode => title.hashCode ^ list.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is HomeBlock &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          list == other.list;
}

class Novel {
  final String id;
  final String title;
  final String author;
  final String coverUrl;
  final String lastChapter;
  final List<String> tags;

  const Novel({
    required this.id,
    required this.title,
    required this.author,
    required this.coverUrl,
    required this.lastChapter,
    required this.tags,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      author.hashCode ^
      coverUrl.hashCode ^
      lastChapter.hashCode ^
      tags.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Novel &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          author == other.author &&
          coverUrl == other.coverUrl &&
          lastChapter == other.lastChapter &&
          tags == other.tags;
}

class NovelCover {
  final String title;
  final String img;
  final String detailUrl;
  final String aid;

  const NovelCover({
    required this.title,
    required this.img,
    required this.detailUrl,
    required this.aid,
  });

  @override
  int get hashCode =>
      title.hashCode ^ img.hashCode ^ detailUrl.hashCode ^ aid.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelCover &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          img == other.img &&
          detailUrl == other.detailUrl &&
          aid == other.aid;
}

class NovelInfo {
  final String title;
  final String author;
  final String status;
  final String finUpdate;
  final String imgUrl;
  final String introduce;
  final List<String> tags;
  final String heat;
  final String trending;
  final bool isAnimated;

  const NovelInfo({
    required this.title,
    required this.author,
    required this.status,
    required this.finUpdate,
    required this.imgUrl,
    required this.introduce,
    required this.tags,
    required this.heat,
    required this.trending,
    required this.isAnimated,
  });

  @override
  int get hashCode =>
      title.hashCode ^
      author.hashCode ^
      status.hashCode ^
      finUpdate.hashCode ^
      imgUrl.hashCode ^
      introduce.hashCode ^
      tags.hashCode ^
      heat.hashCode ^
      trending.hashCode ^
      isAnimated.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelInfo &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          author == other.author &&
          status == other.status &&
          finUpdate == other.finUpdate &&
          imgUrl == other.imgUrl &&
          introduce == other.introduce &&
          tags == other.tags &&
          heat == other.heat &&
          trending == other.trending &&
          isAnimated == other.isAnimated;
}

class TagGroup {
  final String title;
  final List<String> tags;

  const TagGroup({required this.title, required this.tags});

  @override
  int get hashCode => title.hashCode ^ tags.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TagGroup &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          tags == other.tags;
}

class UserDetail {
  final String username;
  final String userId;
  final String nickname;
  final String level;
  final String title;
  final String sex;
  final String email;
  final String qq;
  final String msn;
  final String web;
  final String registerDate;
  final String contributePoint;
  final String experienceValue;
  final String holdingPoints;
  final String quantityOfFriends;
  final String quantityOfMail;
  final String quantityOfCollection;
  final String quantityOfRecommendDaily;
  final String personalizedSignature;
  final String personalizedDescription;

  const UserDetail({
    required this.username,
    required this.userId,
    required this.nickname,
    required this.level,
    required this.title,
    required this.sex,
    required this.email,
    required this.qq,
    required this.msn,
    required this.web,
    required this.registerDate,
    required this.contributePoint,
    required this.experienceValue,
    required this.holdingPoints,
    required this.quantityOfFriends,
    required this.quantityOfMail,
    required this.quantityOfCollection,
    required this.quantityOfRecommendDaily,
    required this.personalizedSignature,
    required this.personalizedDescription,
  });

  @override
  int get hashCode =>
      username.hashCode ^
      userId.hashCode ^
      nickname.hashCode ^
      level.hashCode ^
      title.hashCode ^
      sex.hashCode ^
      email.hashCode ^
      qq.hashCode ^
      msn.hashCode ^
      web.hashCode ^
      registerDate.hashCode ^
      contributePoint.hashCode ^
      experienceValue.hashCode ^
      holdingPoints.hashCode ^
      quantityOfFriends.hashCode ^
      quantityOfMail.hashCode ^
      quantityOfCollection.hashCode ^
      quantityOfRecommendDaily.hashCode ^
      personalizedSignature.hashCode ^
      personalizedDescription.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is UserDetail &&
          runtimeType == other.runtimeType &&
          username == other.username &&
          userId == other.userId &&
          nickname == other.nickname &&
          level == other.level &&
          title == other.title &&
          sex == other.sex &&
          email == other.email &&
          qq == other.qq &&
          msn == other.msn &&
          web == other.web &&
          registerDate == other.registerDate &&
          contributePoint == other.contributePoint &&
          experienceValue == other.experienceValue &&
          holdingPoints == other.holdingPoints &&
          quantityOfFriends == other.quantityOfFriends &&
          quantityOfMail == other.quantityOfMail &&
          quantityOfCollection == other.quantityOfCollection &&
          quantityOfRecommendDaily == other.quantityOfRecommendDaily &&
          personalizedSignature == other.personalizedSignature &&
          personalizedDescription == other.personalizedDescription;
}

class Volume {
  final String id;
  final String title;
  final List<Chapter> chapters;

  const Volume({required this.id, required this.title, required this.chapters});

  @override
  int get hashCode => id.hashCode ^ title.hashCode ^ chapters.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Volume &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          chapters == other.chapters;
}
