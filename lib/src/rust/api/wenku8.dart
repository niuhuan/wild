// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../wenku8/models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<void> wenku8Login({
  required String username,
  required String password,
  required String checkcode,
}) => RustLib.instance.api.crateApiWenku8Wenku8Login(
  username: username,
  password: password,
  checkcode: checkcode,
);

Future<List<BookshelfItem>> wenku8GetBookshelf() =>
    RustLib.instance.api.crateApiWenku8Wenku8GetBookshelf();

Future<bool> preLoginState() =>
    RustLib.instance.api.crateApiWenku8PreLoginState();

Future<Uint8List> downloadCheckcode() =>
    RustLib.instance.api.crateApiWenku8DownloadCheckcode();

Future<UserDetail> userDetail() =>
    RustLib.instance.api.crateApiWenku8UserDetail();

Future<List<HomeBlock>> index() => RustLib.instance.api.crateApiWenku8Index();

Future<Uint8List> downloadImage({required String url}) =>
    RustLib.instance.api.crateApiWenku8DownloadImage(url: url);

Future<String> chapterContent({required String aid, required String cid}) =>
    RustLib.instance.api.crateApiWenku8ChapterContent(aid: aid, cid: cid);

Future<NovelInfo> novelInfo({required String aid}) =>
    RustLib.instance.api.crateApiWenku8NovelInfo(aid: aid);

Future<List<Volume>> novelReader({required String aid}) =>
    RustLib.instance.api.crateApiWenku8NovelReader(aid: aid);

Future<void> updateHistory({
  required String novelId,
  required String novelName,
  required String volumeId,
  required String volumeName,
  required String chapterId,
  required String chapterTitle,
  required int progress,
  required String cover,
  required String author,
}) => RustLib.instance.api.crateApiWenku8UpdateHistory(
  novelId: novelId,
  novelName: novelName,
  volumeId: volumeId,
  volumeName: volumeName,
  chapterId: chapterId,
  chapterTitle: chapterTitle,
  progress: progress,
  cover: cover,
  author: author,
);

Future<ReadingHistory?> novelHistoryById({required String novelId}) =>
    RustLib.instance.api.crateApiWenku8NovelHistoryById(novelId: novelId);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReadingHistory>>
abstract class ReadingHistory implements RustOpaqueInterface {}
